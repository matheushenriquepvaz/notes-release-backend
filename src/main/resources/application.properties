spring.mvc.pathmatch.matching-strategy=ant_path_matcher
#Datasource
# -URL de acesso ao banco
#spring.datasource.url=jdbc:h2:file:~/h2db
# -Usu�rio de acesso
#spring.datasource.username=h2sa
# -Senha de acesso
#spring.datasource.password=admin
# -Driver utilizado para conex�o
#spring.datasource.driver-class-name=org.h2.Driver
#spring.jpa.hibernate.ddl-auto=update
#server.port=9005

#H2
# -Habilitar� o acesso ao console do banco de dados
#spring.h2.console.enabled=true
# -URL na qual o console ser� habilitado
#spring.h2.console.path=/h2


#hibernate.format_sql=true
#hibernate.hbm2ddl.auto=create-drop
#hibernate.hbm2ddl.import_files=import.sql



# The format used for the keystore. It could be set to JKS in case it is a JKS file
#server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
#server.ssl.key-store=classpath:keystore/baeldung.p12
# The password used to generate the certificate
# The alias mapped to the certificate
#server.ssl.key-alias=baeldung

#security.require-ssl=true

#trust store location
#trust.store=classpath:keystore/baeldung.p12
#trust store password


spring.profiles.active=PROD
spring.jpa.hibernate.ddl-auto=validate
spring.sql.init.mode=always
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.datasource.url=${DATABASE_URL}
spring.datasource.driverClassName=org.postgresql.Driver

aws.access.key=${AWS_ACCESS_KEY}
aws.secret.key=${AWS_SECRET_KEY}
aws.s3.region=${AWS_S3_REGION}
aws.s3.bucket=${AWS_S3_BUCKET}
aws.endpoint.url=${endpointUrl}
ambiente.front=${AMBIENTE_FRONT}


spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true